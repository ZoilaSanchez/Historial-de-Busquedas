{
if(listurl[[j]][1]==separado[[1]][3])
{
existe <- TRUE
j<-length(listurl)
}else{
existe<-FALSE
}
}
if(existe==TRUE){
i=i+1
}else{
regURL<-c(grep(separado[[1]][3], historial$url, value = TRUE))
listurl <- c(listurl, separado[[1]][3])
canturl <-c(canturl,length(regURL))
}
}
}
losdatos <- as.data.frame(cbind(canturl,listurl))
filtrardatosunicos<-unique(losdatos)
sink("./enlacesmasbuscados1.txt")
mayores=subset(filtrardatosunicos,(as.numeric(canturl))>=1000)
for(i in 1:length(mayores$listurl)){
cat(mayores$canturl[i][1],",", mayores$listurl[i][1],'\n')
}
sink()
View(historial)
View(separado)
View(regURL)
View(losdatos)
View(filtrardatosunicos)
View(mayores)
library(htmlwidgets)
head(historial)
#----------------------------------------------------------------------------------
# Código para hallar las 10 página más utilizadas
#----------------------------------------------------------------------------------
listurl<-c()
canturl<-c()
for (i in 1:length(historial$url)) {
#View(separado[[1]][3])
if (length(listurl) < 1){
urlactual <- historial[i,4]
separado<-strsplit(urlactual, "/")
regURL<-c(grep(separado[[1]][3], historial$url, value = TRUE))
listurl <- c(separado[[1]][3])
canturl <-c(length(regURL))
}
else{
x<-2
existe <- FALSE
urlactual <- historial[i,4]
separado<-strsplit(urlactual, "/")
for(j in 1:length(listurl))
{
if(listurl[[j]][1]==separado[[1]][3])
{
existe <- TRUE
j<-length(listurl)
}else{
existe<-FALSE
}
}
if(existe==TRUE){
i=i+1
}else{
regURL<-c(grep(separado[[1]][3], historial$url, value = TRUE))
listurl <- c(listurl, separado[[1]][3])
canturl <-c(canturl,length(regURL))
}
}
}
losdatos <- as.data.frame(cbind(canturl,listurl))
filtrardatosunicos<-unique(losdatos)
sink("./enlacesmasbuscados1.txt")
mayores=subset(filtrardatosunicos,(as.numeric(canturl))>=1000)
for(i in 1:length(mayores$listurl)){
cat(mayores$canturl[i][1],",", mayores$listurl[i][1],'\n')
}
sink()
#----------------------------------------------------------------------------------
# Código para hallar las 10 página más utilizadas
#----------------------------------------------------------------------------------
#View(historial)
#View(separado)
#View(regURL)
#View(losdatos)
#View(filtrardatosunicos)
#View(mayores)
print(mayores)
library(htmlwidgets)
head(historial)
#----------------------------------------------------------------------------------
# Código para hallar las 10 página más utilizadas
#----------------------------------------------------------------------------------
listurl<-c()
canturl<-c()
for (i in 1:length(historial$url)) {
#View(separado[[1]][3])
if (length(listurl) < 1){
urlactual <- historial[i,4]
separado<-strsplit(urlactual, "/")
regURL<-c(grep(separado[[1]][3], historial$url, value = TRUE))
listurl <- c(separado[[1]][3])
canturl <-c(length(regURL))
}
else{
x<-2
existe <- FALSE
urlactual <- historial[i,4]
separado<-strsplit(urlactual, "/")
for(j in 1:length(listurl))
{
if(listurl[[j]][1]==separado[[1]][3])
{
existe <- TRUE
j<-length(listurl)
}else{
existe<-FALSE
}
}
if(existe==TRUE){
i=i+1
}else{
regURL<-c(grep(separado[[1]][3], historial$url, value = TRUE))
listurl <- c(listurl, separado[[1]][3])
canturl <-c(canturl,length(regURL))
}
}
}
losdatos <- as.data.frame(cbind(canturl,listurl))
filtrardatosunicos<-unique(losdatos)
sink("./enlacesmasbuscados1.txt")
mayores=subset(filtrardatosunicos,(as.numeric(canturl))>=1000)
for(i in 1:length(mayores$listurl)){
cat(mayores$canturl[i][1],",", mayores$listurl[i][1],'\n')
}
sink()
#----------------------------------------------------------------------------------
# Código para hallar las 10 página más utilizadas
#----------------------------------------------------------------------------------
#View(historial)
#View(separado)
#View(regURL)
#View(losdatos)
#View(filtrardatosunicos)
#View(mayores)
print(mayores)
library(htmlwidgets)
head(historial)
library(htmlwidgets)
head(historial)
library(htmlwidgets)
head(historial)
#----------------------------------------------------------------------------------
# Código para hallar las 10 página más utilizadas
#----------------------------------------------------------------------------------
listurl<-c()
canturl<-c()
for (i in 1:length(historial$url)) {
#View(separado[[1]][3])
if (length(listurl) < 1){
urlactual <- historial[i,4]
separado<-strsplit(urlactual, "/")
regURL<-c(grep(separado[[1]][3], historial$url, value = TRUE))
listurl <- c(separado[[1]][3])
canturl <-c(length(regURL))
}
else{
x<-2
existe <- FALSE
urlactual <- historial[i,4]
separado<-strsplit(urlactual, "/")
for(j in 1:length(listurl))
{
if(listurl[[j]][1]==separado[[1]][3])
{
existe <- TRUE
j<-length(listurl)
}else{
existe<-FALSE
}
}
if(existe==TRUE){
i=i+1
}else{
regURL<-c(grep(separado[[1]][3], historial$url, value = TRUE))
listurl <- c(listurl, separado[[1]][3])
canturl <-c(canturl,length(regURL))
}
}
}
losdatos <- as.data.frame(cbind(canturl,listurl))
filtrardatosunicos<-unique(losdatos)
sink("./enlacesmasbuscados1.txt")
mayores=subset(filtrardatosunicos,(as.numeric(canturl))>=1000)
for(i in 1:length(mayores$listurl)){
cat(mayores$canturl[i][1],",", mayores$listurl[i][1],'\n')
}
sink()
#----------------------------------------------------------------------------------
# Código para hallar las 10 página más utilizadas
#----------------------------------------------------------------------------------
View(historial)
View(separado)
View(regURL)
View(losdatos)
View(filtrardatosunicos)
View(mayores)
#cargar el .csv con ruta relativa
ruta = getwd()
ruta = paste(ruta, "AGraficar/graficaMes.txt", sep="/")
print(ruta)
data01 <- read.table(file = ruta, sep="\n")
print(data01)
meses <- c("ene","feb","mar","abr","may","jun","jul","ags","sep","oct","nov","dic")
ap1 <-  c(0,0,0,0,0,0,0,0,0,0,0,0)
ap2 <-  c(0,0,0,0,0,0,0,0,0,0,0,0)
ap3 <- c(0,0,0,0,0,0,0,0,0,0,0,0)
ap4 <-  c(0,0,0,0,0,0,0,0,0,0,0,0)
ap5 <- c(0,0,0,0,0,0,0,0,0,0,0,0)
ap6 <- c(0,0,0,0,0,0,0,0,0,0,0,0)
ap7 <- c(0,0,0,0,0,0,0,0,0,0,0,0)
ap8 <-  c(0,0,0,0,0,0,0,0,0,0,0,0)
ap9 <-  c(0,0,0,0,0,0,0,0,0,0,0,0)
ap10 <- c(0,0,0,0,0,0,0,0,0,0,0,0)
ap11 <- c(0,0,0,0,0,0,0,0,0,0,0,0)
ap12 <-  c(0,0,0,0,0,0,0,0,0,0,0,0)
ap13 <- c(0,0,0,0,0,0,0,0,0,0,0,0)
ap14 <-  c(0,0,0,0,0,0,0,0,0,0,0,0)
ap15 <-  c(0,0,0,0,0,0,0,0,0,0,0,0)
ap16 <-  c(0,0,0,0,0,0,0,0,0,0,0,0)
ap17 <-  c(0,0,0,0,0,0,0,0,0,0,0,0)
contador=1
contadorm=1
for (r in 1:nrow(data01))  {
if(r%%2!=0){
print(paste("titulo", data01[r,1], " es columna impar no. ",r))
#titulo[contador] <- data01[r,1]
#contador=contador+1
}
else{
#leerfrecuencia <- data01[r,1]
#texto=c(leerfrecuencia)
#texto_split = strsplit(texto, split=",")
#texto_columnas = data.frame(unlist(texto_split))
#print(nrow(texto_columnas)-1)
#print(contadorm)
#for (rr in 1:nrow(texto_columnas)-1)  {
print(paste(data01[r,1], " es columna par no. ",r))
#print(texto_columnas[rr,1])
#print(paste("cotnador es ", contadorm, "dato es ",leerfrecuencia))
#if(rr!=0){
print(paste(texto_columnas[2,1], "  . ",r))
#Ene[contadorm] <- texto_columnas[1,1]
#feb[contadorm] <- texto_columnas[2,1] # esto es lo que debo hacer ahora solo debo fijar el contador y que llegue a 17
#mar[contadorm] <- texto_columnas[3,1]
#abr[contadorm] <- texto_columnas[4,1]
#may[contadorm] <- texto_columnas[5,1]
#jun[contadorm] <- texto_columnas[6,1]
#jul[contadorm] <- texto_columnas[7,1]
#ags[contadorm] <- texto_columnas[8,1]
#sep[contadorm] <- texto_columnas[9,1]
#oct[contadorm] <- texto_columnas[10,1]
#nov[contadorm] <- texto_columnas[11,1]
#dic[contadorm] <- texto_columnas[12,1]
#}
#}
}
}
print(contador)
print(meses)
laTabla = data.frame (cbind(meses,ap1,ap2,ap3,ap4,ap5,ap6,ap7,ap8,ap9,ap10,ap11,ap12,ap13,ap14,ap15,ap16,ap17))
print(laTabla)
groupTest <- sample(1:3, size = 100, replace = TRUE)
valueTest <- sample(1:7, size = 100, replace = TRUE)
tableTest <- table(groupTest, valueTest)
barplot(tableTest,
col = Tango_gpl, axes = FALSE, beside = TRUE)
#cargar el .csv con ruta relativa
ruta = getwd()
ruta = paste(ruta, "AGraficar/graficaMes.txt", sep="/")
print(ruta)
# en este apartado se ven los titulos de las paginas
data01 <- read.table(file = ruta, sep=\n)
print(data01)
titulo <- c(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0)
Ene <- c(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0)
feb <- c(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0)
mar <- c(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0)
abr <- c(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0)
may <- c(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0)
jun <- c(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0)
jul <- c(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0)
ags <- c(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0)
sep <- c(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0)
oct <-c(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0)
nov <-c(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0)
dic <- c(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0)
contador=1
contadorm=1
for (r in 1:nrow(data01))  {
if(r%%2!=0){
#print(paste("titulo", data01[r,1], " es columna impar no. ",r))
titulo[contador] <- data01[r,1]
contador=contador+1
}
else{
leerfrecuencia <- data01[r,1]
texto=c(leerfrecuencia)
texto_split = strsplit(texto, split=",")
texto_columnas = data.frame(unlist(texto_split))
print(nrow(texto_columnas)-1)
#print(contadorm)
#for (rr in 1:nrow(texto_columnas)-1)  {
#print(paste("titulo", data01[r,c], " es columna impar no. ",r))
#print(texto_columnas[rr,1])
print(paste("cotnador es ", contadorm, "dato es ",leerfrecuencia))
#if(rr!=0){
#print(paste(texto_columnas[2,1], "  . ",r))
Ene[contadorm] <- texto_columnas[1,1]
feb[contadorm] <- texto_columnas[2,1] # esto es lo que debo hacer ahora solo debo fijar el contador y que llegue a 17
mar[contadorm] <- texto_columnas[3,1]
abr[contadorm] <- texto_columnas[4,1]
may[contadorm] <- texto_columnas[5,1]
jun[contadorm] <- texto_columnas[6,1]
jul[contadorm] <- texto_columnas[7,1]
ags[contadorm] <- texto_columnas[8,1]
sep[contadorm] <- texto_columnas[9,1]
oct[contadorm] <- texto_columnas[10,1]
nov[contadorm] <- texto_columnas[11,1]
dic[contadorm] <- texto_columnas[12,1]
contadorm=contadorm+1
#}
#}
}
}
print(contador)
print(titulo)
laTabla = data.frame (cbind(titulo,Ene,feb,mar,abr,may,jun,jul,ags,sep,oct,nov,dic))
print(laTabla)
#cargar el .csv con ruta relativa
ruta = getwd()
ruta = paste(ruta, "AGraficar/graficaMes.txt", sep="/")
print(ruta)
data01 <- read.table(file = ruta, sep=\n)
print(data01)
array <- c(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0)
contador=0
for (r in 1:nrow(data01))
for (c in 1:ncol(data01)){
if(r%%2!=0){
#print(paste("titulo", data01[r,c], " es columna impar no. ",r))
array[contador] <- data01[r,c]
contador=contador+1
}
else{
#print(paste("titulo", data01[r,c], " es columna par no. ",r))
}
}
print(contador)
print(array)
barplot(table(disney),xlab="Region",main="Happiness level by region", col=rainbow(10))
dfLetters <- data.frame(Titulo =letters, En =  1:26, Feb =  1:26, Mar =  1:26, Abr =  1:26, May =  1:26, Jun =  1:26, Jul =  1:26, Ago =  1:26, Sep =  1:26, Oct =  1:26, Nov =  1:26, Dic =  1:26)
print(dfLetters)
dfLetters <- data.frame(En, Feb , Mar )
mi_lista_4 <- list(c(1, 7, 3), c(9, 8, 1))
data.frame(matrix(unlist(mi_lista_4), nrow = length(mi_lista_4), byrow = TRUE))
do.call(rbind.data.frame, mi_lista_4) # Similar
#cargar el .csv con ruta relativa
ruta = getwd()
ruta = paste(ruta, "AGraficar/graficaMes.txt", sep="/")
print(ruta)
data01 <- read.table(file = ruta, sep=\n)
print(data01)
array <- c(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0)
contador=0
for (r in 1:nrow(data01))
for (c in 1:ncol(data01)){
if(r%%2!=0){
#print(paste("titulo", data01[r,c], " es columna impar no. ",r))
array[contador] <- data01[r,c]
contador=contador+1
}
else{
#print(paste("titulo", data01[r,c], " es columna par no. ",r))
}
}
print(contador)
print(array)
barplot(table(disney),xlab="Region",main="Happiness level by region", col=rainbow(10))
dfLetters <- data.frame(Titulo =letters, En =  1:26, Feb =  1:26, Mar =  1:26, Abr =  1:26, May =  1:26, Jun =  1:26, Jul =  1:26, Ago =  1:26, Sep =  1:26, Oct =  1:26, Nov =  1:26, Dic =  1:26)
print(dfLetters)
dfLetters <- data.frame(En, Feb , Mar )
mi_lista_4 <- list(c(1, 7, 3), c(9, 8, 1))
data.frame(matrix(unlist(mi_lista_4), nrow = length(mi_lista_4), byrow = TRUE))
do.call(rbind.data.frame, mi_lista_4) # Similar
# este es un apartaod bueno
#cargar el .csv con ruta relativa
ruta = getwd()
ruta = paste(ruta, "AGraficar/graficaMes.txt", sep="/")
print(ruta)
data01 <- read.table(file = ruta, sep="\n")
print(data01)
titulo <- c(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0)
Ene <- c(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0)
feb <- c(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0)
mar <- c(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0)
abr <- c(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0)
may <- c(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0)
jun <- c(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0)
jul <- c(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0)
ags <- c(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0)
sep <- c(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0)
oct <-c(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0)
nov <-c(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0)
dic <- c(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0)
contador=1
contadorm=1
for (r in 1:nrow(data01))  {
if(r%%2!=0){
#print(paste("titulo", data01[r,1], " es columna impar no. ",r))
titulo[contador] <- data01[r,1]
contador=contador+1
}
else{
leerfrecuencia <- data01[r,1]
texto=c(leerfrecuencia)
texto_split = strsplit(texto, split=",")
texto_columnas = data.frame(unlist(texto_split))
print(nrow(texto_columnas)-1)
#print(contadorm)
#for (rr in 1:nrow(texto_columnas)-1)  {
#print(paste("titulo", data01[r,c], " es columna impar no. ",r))
#print(texto_columnas[rr,1])
print(paste("cotnador es ", contadorm, "dato es ",leerfrecuencia))
#if(rr!=0){
#print(paste(texto_columnas[2,1], "  . ",r))
Ene[contadorm] <- texto_columnas[1,1]
feb[contadorm] <- texto_columnas[2,1] # esto es lo que debo hacer ahora solo debo fijar el contador y que llegue a 17
mar[contadorm] <- texto_columnas[3,1]
abr[contadorm] <- texto_columnas[4,1]
may[contadorm] <- texto_columnas[5,1]
jun[contadorm] <- texto_columnas[6,1]
jul[contadorm] <- texto_columnas[7,1]
ags[contadorm] <- texto_columnas[8,1]
sep[contadorm] <- texto_columnas[9,1]
oct[contadorm] <- texto_columnas[10,1]
nov[contadorm] <- texto_columnas[11,1]
dic[contadorm] <- texto_columnas[12,1]
contadorm=contadorm+1
#}
#}
}
}
print(contador)
print(titulo)
#laTabla = data.frame(rbind(titulo,Ene,feb,mar,abr,may,jun,jul,ags,sep,oct,nov,dic)) # converir rn filas
#print(laTabla)
#laTabla = data.frame(cbind(titulo,Ene,feb,mar,abr,may,jun,jul,ags,sep,oct,nov,dic)) # converir en col
#print(laTabla)
laTabla = data.frame(titulo=titulo,ene=Ene,feb=feb,mar=mar,abr=abr,may=may,jun=jun,jul=jul,ags=ags,sep=sep,oct=oct,nov=nov,dic=dic) # converir rn filas
print(laTabla)
library(ggplot2)
library(scales)
dev.off()
df <- data.frame(
group = c("Male", "Female", "Child"),
value = c(25, 25, 50)
)
head(df)
library(ggplot2) # Cargar la librería gráfica "ggplot2"
library(dplyr) # Cargar la librería de manipulación de dataframes "dplyr"
datos <- data.frame(titulo=titulo,ene=Ene,feb=feb,mar=mar,abr=abr,may=may,jun=jun,jul=jul,ags=ags,sep=sep,oct=oct,nov=nov,dic=dic)
datos
a =ggplot(datos, aes("" ,Ene , fill = titulo)) +
geom_bar(stat = "identity", position = "dodge") +
scale_x_discrete()+ labs(title =" Paginas", x = "Mes Enero", y = "Fecuencia")
a
b = ggplot(datos, aes("" ,feb , fill = titulo)) +
geom_bar(stat = "identity", position = "dodge") +
scale_x_discrete()+ labs(title =" Paginas", x = "Mes feb", y = "Fecuencia")
b
c = ggplot(datos, aes("" ,sep , fill = titulo)) +
geom_bar(stat = "identity", position = "dodge")
c
library(ggplot2) # Cargar la librería gráfica "ggplot2"
library(dplyr) # Cargar la librería de manipulación de dataframes "dplyr"
sexo <- c(rep("man",20),rep("woman",20),rep("man",20),rep("woman",20))
valor <- 1:80
grupo <- c(rep("spain",25),rep("italy",25),rep("portugal",30))
datos <- data.frame(sexo=sexo, valor=valor, grupo=grupo)
datos
datos <- datos %>%
group_by(grupo, sexo) %>%
summarise(valor = sum(valor, na.rm = TRUE)) %>%
ungroup() %>%
mutate(grupo = factor(grupo, levels = .$grupo))
ggplot(datos, aes(grupo, valor, fill = sexo)) +
geom_bar(stat = "identity", position = "dodge") +
scale_x_discrete()
meses <- c("ene","feb","mar","abr","may","jun","jul","ags","sep","oct","nov","dic")
ggplot(data=laTabla, aes(x=titulo, y=Ene, fill=titulo)) +
geom_bar(stat="identity", position="dodge")
#a<-ggplot(laTabla,aes(x=titulo)) + geom_bar(fill="red2") + coord_flip()
#a + theme_classic()
#b<-ggplot(laTabla,aes(y=oct,x=titulo))+geom_bar(aes(fill=titulo))
#b
#ggplot(laTabla,aes(x=Ene))+geom_bar()+facet_wrap(~titulo,nrow =3 ) # escribe uno es por categoria
attach(laTabla)
ggplot(laTabla,aes(x=titulo,y=Ene,Feb))+geom_bar(stat="identity",fill="lightblue")
View(laTabla)
