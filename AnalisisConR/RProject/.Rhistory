url = ContarConexionesSemana(listaLinks[i])
#print(url)
for(j in 1:length(url)){
#print(url[j])
cat(url[[j]])
cat(", ")
}
cat("\n")
}
sink()
ruta = getwd()
rutaGuardar = paste(ruta, "AGraficar/graficaMes.txt", sep="/")
sink(rutaGuardar)
for (i in 1:length(listaLinks)) {
#print(listaLinks[i])
cat(listaLinks[[i]])
cat("\n")
url = ContarConexionesMes(listaLinks[i])
#print(url)
for(j in 1:length(url)){
#print(url[j])
cat(url[[j]])
cat(", ")
}
cat("\n")
}
sink()
read.table(graficaMes.txt,                 # Archivo de datos TXT indicado como string o ruta completa al archivo
header = FALSE,       # Si se muestra el encabezado (TRUE) o no (FALSE)
sep = "",             # Separador de las columnas del archivo
dec = ".")
read.table("graficaMes.txt",                 # Archivo de datos TXT indicado como string o ruta completa al archivo
header = FALSE,       # Si se muestra el encabezado (TRUE) o no (FALSE)
sep = "",             # Separador de las columnas del archivo
dec = ".")
x=read.table("graficaMes.txt",                 # Archivo de datos TXT indicado como string o ruta completa al archivo
header = FALSE,       # Si se muestra el encabezado (TRUE) o no (FALSE)
sep = "",             # Separador de las columnas del archivo
dec = ".")
x=read.table(ruta,                 # Archivo de datos TXT indicado como string o ruta completa al archivo
header = FALSE,       # Si se muestra el encabezado (TRUE) o no (FALSE)
sep = "",             # Separador de las columnas del archivo
dec = ".")
ruta = C:\Users\zoili\Documents\GitHub\Historial-de-Busquedas\AnalisisConR\RProject\AGraficar+"AGraficar/graficaMes.txt"
ruta =" C:\Users\zoili\Documents\GitHub\Historial-de-Busquedas\AnalisisConR\RProject\AGraficar\graficaMes.txt"
ruta ="C:\Users\zoili\Documents\GitHub\Historial-de-Busquedas\AnalisisConR\RProject\AGraficar\graficaMes.txt"
x=read.table(ruta,                 # Archivo de datos TXT indicado como string o ruta completa al archivo
header = FALSE,       # Si se muestra el encabezado (TRUE) o no (FALSE)
sep = "",             # Separador de las columnas del archivo
dec = ".")
x
View(x)
View(ruta)
ruta
ruta
x
x<-read.table(ruta,                 # Archivo de datos TXT indicado como string o ruta completa al archivo
header = FALSE,       # Si se muestra el encabezado (TRUE) o no (FALSE)
sep = "",             # Separador de las columnas del archivo
dec = ".")
ruta ="graficaMes.txt"
x
data <- read.table(file =ruta, header = TRUE)
head(data)
y <- read.table ("graficaMes.txt", header = TRUE) # lee un archivo txt
y <- read.table (".\graficaMes.txt", header = TRUE) # lee un archivo txt
y <- read.table ("graficaMes.txt", header = TRUE) # lee un archivo txt
ruta = getwd()
ruta
print(ruta)
ruta = getwd()+"/txt"
ruta = getwd()+"/AGraficar"
print(ruta)
ruta
ruta = paste(ruta, "AGraficar", sep="/")
print(ruta)
ruta = paste(ruta, "AGraficar/graficaMes.txt", sep="/")
print(ruta)
ruta
y <- read.table (ruta, header = TRUE) # lee un archivo txt
y <- read.table ("graficaMes.txt", header = TRUE) # lee un archivo txt
#y <- read.table ("graficaMes.txt", header = TRUE) # lee un archivo txt
ruta = getwd()
ruta
y
print(y)
print(y)
y
#y <- read.table (ruta, header = TRUE) # lee un archivo txt
iris_txt <- read.table(file = ruta, header = TRUE, sep = ",")
head(iris_txt)
iris_txt
iris_txt <- read.table(file = ruta, header = TRUE, sep = ",")
head(iris_txt)
data <- read.table(file = "graficaMes.txt", header = TRUE)
head(data)
data
#y <- read.table (ruta, header = TRUE) # lee un archivo txt
data <- read.table(file = ruta, header = TRUE)
data <- read.table(file = ruta, header = TRUE)
head(data)
data
#y <- read.table (ruta, header = TRUE) # lee un archivo txt
data <- read.table(file = ruta, header = FALSE)
head(data)
#y <- read.table (ruta, header = TRUE) # lee un archivo txt
data <- read.table(file = ruta)
head(data)
#y <- read.table (ruta, header = TRUE) # lee un archivo txt
data
data2 <- read.table(file = ruta)
data2
laTabla = data.frame(titulo=titulo,ene=Ene,feb=feb,mar=mar,abr=abr,may=may,jun=jun,jul=jul,ags=ags,sep=sep,oct=oct,nov=nov,dic=dic) # converir rn filas
print(laTabla)
# este es un apartaod bueno
#cargar el .csv con ruta relativa
ruta = getwd()
ruta = paste(ruta, "AGraficar/graficaMes.txt", sep="/")
print(ruta)
data01 <- read.table(file = ruta, sep="\n")
print(data01)
titulo <- c(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0)
Ene <- c(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0)
feb <- c(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0)
mar <- c(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0)
abr <- c(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0)
may <- c(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0)
jun <- c(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0)
jul <- c(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0)
ags <- c(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0)
sep <- c(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0)
oct <-c(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0)
nov <-c(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0)
dic <- c(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0)
contador=1
contadorm=1
for (r in 1:nrow(data01))  {
if(r%%2!=0){
#print(paste("titulo", data01[r,1], " es columna impar no. ",r))
titulo[contador] <- data01[r,1]
contador=contador+1
}
else{
leerfrecuencia <- data01[r,1]
texto=c(leerfrecuencia)
texto_split = strsplit(texto, split=",")
texto_columnas = data.frame(unlist(texto_split))
print(nrow(texto_columnas)-1)
#print(contadorm)
#for (rr in 1:nrow(texto_columnas)-1)  {
#print(paste("titulo", data01[r,c], " es columna impar no. ",r))
#print(texto_columnas[rr,1])
print(paste("cotnador es ", contadorm, "dato es ",leerfrecuencia))
#if(rr!=0){
#print(paste(texto_columnas[2,1], "  . ",r))
Ene[contadorm] <- texto_columnas[1,1]
feb[contadorm] <- texto_columnas[2,1] # esto es lo que debo hacer ahora solo debo fijar el contador y que llegue a 17
mar[contadorm] <- texto_columnas[3,1]
abr[contadorm] <- texto_columnas[4,1]
may[contadorm] <- texto_columnas[5,1]
jun[contadorm] <- texto_columnas[6,1]
jul[contadorm] <- texto_columnas[7,1]
ags[contadorm] <- texto_columnas[8,1]
sep[contadorm] <- texto_columnas[9,1]
oct[contadorm] <- texto_columnas[10,1]
nov[contadorm] <- texto_columnas[11,1]
dic[contadorm] <- texto_columnas[12,1]
contadorm=contadorm+1
#}
#}
}
}
laTabla = data.frame(titulo=titulo,ene=Ene,feb=feb,mar=mar,abr=abr,may=may,jun=jun,jul=jul,ags=ags,sep=sep,oct=oct,nov=nov,dic=dic) # converir rn filas
print(laTabla)
library(htmlwidgets)
head(historial)
#----------------------------------------------------------------------------------
# Código para hallar las 10 página más utilizadas
#----------------------------------------------------------------------------------
listurl<-c()
canturl<-c()
for (i in 1:length(historial$url)) {
#View(separado[[1]][3])
if (length(listurl) < 1){
urlactual <- historial[i,4]
separado<-strsplit(urlactual, "/")
regURL<-c(grep(separado[[1]][3], historial$url, value = TRUE))
listurl <- c(separado[[1]][3])
canturl <-c(length(regURL))
}
else{
x<-2
existe <- FALSE
urlactual <- historial[i,4]
separado<-strsplit(urlactual, "/")
for(j in 1:length(listurl))
{
if(listurl[[j]][1]==separado[[1]][3])
{
existe <- TRUE
j<-length(listurl)
}else{
existe<-FALSE
}
}
if(existe==TRUE){
i=i+1
}else{
regURL<-c(grep(separado[[1]][3], historial$url, value = TRUE))
listurl <- c(listurl, separado[[1]][3])
canturl <-c(canturl,length(regURL))
}
}
}
losdatos <- as.data.frame(cbind(canturl,listurl))
filtrardatosunicos<-unique(losdatos)
sink("./enlacesmasbuscados1.txt")
mayores=subset(filtrardatosunicos,(as.numeric(canturl))>=1000)
for(i in 1:length(mayores$listurl)){
cat(mayores$canturl[i][1],",", mayores$listurl[i][1],'\n')
}
sink()
#----------------------------------------------------------------------------------
# Código para hallar las 10 página más utilizadas
#----------------------------------------------------------------------------------
View(historial)
View(separado)
View(regURL)
View(losdatos)
View(filtrardatosunicos)
View(mayores)
listurl<-c()
canturl<-c()
for (i in 1:length(historial$url)) {
#View(separado[[1]][3])
if (length(listurl) < 1){
urlactual <- historial[i,4]
separado<-strsplit(urlactual, "/")
regURL<-c(grep(separado[[1]][3], historial$url, value = TRUE))
listurl <- c(separado[[1]][3])
canturl <-c(length(regURL))
}
else{
x<-2
existe <- FALSE
urlactual <- historial[i,4]
separado<-strsplit(urlactual, "/")
for(j in 1:length(listurl))
{
if(listurl[[j]][1]==separado[[1]][3])
{
existe <- TRUE
j<-length(listurl)
}else{
existe<-FALSE
}
}
if(existe==TRUE){
i=i+1
}else{
regURL<-c(grep(separado[[1]][3], historial$url, value = TRUE))
listurl <- c(listurl, separado[[1]][3])
canturl <-c(canturl,length(regURL))
}
}
}
losdatos <- as.data.frame(cbind(canturl,listurl))
filtrardatosunicos<-unique(losdatos)
sink("./enlacesmasbuscados1.txt")
mayores=subset(filtrardatosunicos,(as.numeric(canturl))>=1000)
for(i in 1:length(mayores$listurl)){
cat(mayores$canturl[i][1],",", mayores$listurl[i][1],'\n')
}
sink()
#----------------------------------------------------------------------------------
# Código para hallar las 10 página más utilizadas
#----------------------------------------------------------------------------------
View(historial)
View(separado)
View(regURL)
View(losdatos)
View(filtrardatosunicos)
View(mayores)
#----------------------------------------------------------------------------------
# Código para hallar las 10 página más utilizadas
#----------------------------------------------------------------------------------
listurl<-c()
canturl<-c()
for (i in 1:length(historial$url)) {
#View(separado[[1]][3])
if (length(listurl) < 1){
urlactual <- historial[i,4]
separado<-strsplit(urlactual, "/")
regURL<-c(grep(separado[[1]][3], historial$url, value = TRUE))
listurl <- c(separado[[1]][3])
canturl <-c(length(regURL))
}
else{
x<-2
existe <- FALSE
urlactual <- historial[i,4]
separado<-strsplit(urlactual, "/")
for(j in 1:length(listurl))
{
if(listurl[[j]][1]==separado[[1]][3])
{
existe <- TRUE
j<-length(listurl)
}else{
existe<-FALSE
}
}
if(existe==TRUE){
i=i+1
}else{
regURL<-c(grep(separado[[1]][3], historial$url, value = TRUE))
listurl <- c(listurl, separado[[1]][3])
canturl <-c(canturl,length(regURL))
}
}
}
losdatos <- as.data.frame(cbind(canturl,listurl))
filtrardatosunicos<-unique(losdatos)
sink("./enlacesmasbuscados1.txt")
mayores=subset(filtrardatosunicos,(as.numeric(canturl))>=1000)
for(i in 1:length(mayores$listurl)){
cat(mayores$canturl[i][1],",", mayores$listurl[i][1],'\n')
}
sink()
View(historial)
View(separado)
View(regURL)
View(losdatos)
View(filtrardatosunicos)
View(mayores)
library(htmlwidgets)
head(historial)
#----------------------------------------------------------------------------------
# Código para hallar las 10 página más utilizadas
#----------------------------------------------------------------------------------
listurl<-c()
canturl<-c()
for (i in 1:length(historial$url)) {
#View(separado[[1]][3])
if (length(listurl) < 1){
urlactual <- historial[i,4]
separado<-strsplit(urlactual, "/")
regURL<-c(grep(separado[[1]][3], historial$url, value = TRUE))
listurl <- c(separado[[1]][3])
canturl <-c(length(regURL))
}
else{
x<-2
existe <- FALSE
urlactual <- historial[i,4]
separado<-strsplit(urlactual, "/")
for(j in 1:length(listurl))
{
if(listurl[[j]][1]==separado[[1]][3])
{
existe <- TRUE
j<-length(listurl)
}else{
existe<-FALSE
}
}
if(existe==TRUE){
i=i+1
}else{
regURL<-c(grep(separado[[1]][3], historial$url, value = TRUE))
listurl <- c(listurl, separado[[1]][3])
canturl <-c(canturl,length(regURL))
}
}
}
losdatos <- as.data.frame(cbind(canturl,listurl))
filtrardatosunicos<-unique(losdatos)
sink("./enlacesmasbuscados1.txt")
mayores=subset(filtrardatosunicos,(as.numeric(canturl))>=1000)
for(i in 1:length(mayores$listurl)){
cat(mayores$canturl[i][1],",", mayores$listurl[i][1],'\n')
}
sink()
#----------------------------------------------------------------------------------
# Código para hallar las 10 página más utilizadas
#----------------------------------------------------------------------------------
#View(historial)
#View(separado)
#View(regURL)
#View(losdatos)
#View(filtrardatosunicos)
#View(mayores)
print(mayores)
library(htmlwidgets)
head(historial)
#----------------------------------------------------------------------------------
# Código para hallar las 10 página más utilizadas
#----------------------------------------------------------------------------------
listurl<-c()
canturl<-c()
for (i in 1:length(historial$url)) {
#View(separado[[1]][3])
if (length(listurl) < 1){
urlactual <- historial[i,4]
separado<-strsplit(urlactual, "/")
regURL<-c(grep(separado[[1]][3], historial$url, value = TRUE))
listurl <- c(separado[[1]][3])
canturl <-c(length(regURL))
}
else{
x<-2
existe <- FALSE
urlactual <- historial[i,4]
separado<-strsplit(urlactual, "/")
for(j in 1:length(listurl))
{
if(listurl[[j]][1]==separado[[1]][3])
{
existe <- TRUE
j<-length(listurl)
}else{
existe<-FALSE
}
}
if(existe==TRUE){
i=i+1
}else{
regURL<-c(grep(separado[[1]][3], historial$url, value = TRUE))
listurl <- c(listurl, separado[[1]][3])
canturl <-c(canturl,length(regURL))
}
}
}
losdatos <- as.data.frame(cbind(canturl,listurl))
filtrardatosunicos<-unique(losdatos)
sink("./enlacesmasbuscados1.txt")
mayores=subset(filtrardatosunicos,(as.numeric(canturl))>=1000)
for(i in 1:length(mayores$listurl)){
cat(mayores$canturl[i][1],",", mayores$listurl[i][1],'\n')
}
sink()
#----------------------------------------------------------------------------------
# Código para hallar las 10 página más utilizadas
#----------------------------------------------------------------------------------
#View(historial)
#View(separado)
#View(regURL)
#View(losdatos)
#View(filtrardatosunicos)
#View(mayores)
print(mayores)
library(htmlwidgets)
head(historial)
library(htmlwidgets)
head(historial)
library(htmlwidgets)
head(historial)
#----------------------------------------------------------------------------------
# Código para hallar las 10 página más utilizadas
#----------------------------------------------------------------------------------
listurl<-c()
canturl<-c()
for (i in 1:length(historial$url)) {
#View(separado[[1]][3])
if (length(listurl) < 1){
urlactual <- historial[i,4]
separado<-strsplit(urlactual, "/")
regURL<-c(grep(separado[[1]][3], historial$url, value = TRUE))
listurl <- c(separado[[1]][3])
canturl <-c(length(regURL))
}
else{
x<-2
existe <- FALSE
urlactual <- historial[i,4]
separado<-strsplit(urlactual, "/")
for(j in 1:length(listurl))
{
if(listurl[[j]][1]==separado[[1]][3])
{
existe <- TRUE
j<-length(listurl)
}else{
existe<-FALSE
}
}
if(existe==TRUE){
i=i+1
}else{
regURL<-c(grep(separado[[1]][3], historial$url, value = TRUE))
listurl <- c(listurl, separado[[1]][3])
canturl <-c(canturl,length(regURL))
}
}
}
losdatos <- as.data.frame(cbind(canturl,listurl))
filtrardatosunicos<-unique(losdatos)
sink("./enlacesmasbuscados1.txt")
mayores=subset(filtrardatosunicos,(as.numeric(canturl))>=1000)
for(i in 1:length(mayores$listurl)){
cat(mayores$canturl[i][1],",", mayores$listurl[i][1],'\n')
}
sink()
#----------------------------------------------------------------------------------
# Código para hallar las 10 página más utilizadas
#----------------------------------------------------------------------------------
View(historial)
View(separado)
View(regURL)
View(losdatos)
View(filtrardatosunicos)
View(mayores)
